[{"rawIndexableTextContent":"Flips the polygon along its plane. ","kind":"symbol","title":"inverted()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/inverted()","interfaceLanguage":"swift"}},"summary":"Flips the polygon along its plane."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/scaled(by:)-90bab","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new vertex with normal inverted.  Discussion Called when the orientation of a polygon is flipped.","kind":"symbol","title":"inverted()","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/inverted()","interfaceLanguage":"swift"}},"summary":"Returns a new vertex with normal inverted."},{"rawIndexableTextContent":"Encodes this mesh into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this mesh into the given encoder."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new vector from a CoreGraphics point.  the CoreGraphics point.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(_:)-4eop9","interfaceLanguage":"swift"}},"summary":"Creates a new vector from a CoreGraphics point."},{"rawIndexableTextContent":"A choice of how the edges of a path are used to generate a mesh. ","kind":"symbol","title":"Mesh.WrapMode","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode","interfaceLanguage":"swift"}},"summary":"A choice of how the edges of a path are used to generate a mesh."},{"rawIndexableTextContent":"A Boolean value that indicates the vector has a length effectively equivalent to 1. ","kind":"symbol","title":"isNormalized","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/isNormalized","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates the vector has a length effectively equivalent to 1."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the point is on the line.  The point to compare.","kind":"symbol","title":"containsPoint(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/containsPoint(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the point is on the line."},{"rawIndexableTextContent":"The length of vector, squared. ","kind":"symbol","title":"lengthSquared","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/lengthSquared","interfaceLanguage":"swift"}},"summary":"The length of vector, squared."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/*(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create a closed rectangular path ","kind":"symbol","title":"rectangle(width:height:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/rectangle(width:height:color:)","interfaceLanguage":"swift"}},"summary":"Create a closed rectangular path"},{"rawIndexableTextContent":"Render both the front and back faces of the polygon. ","kind":"symbol","title":"Mesh.Faces.frontAndBack","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/frontAndBack","interfaceLanguage":"swift"}},"summary":"Render both the front and back faces of the polygon."},{"rawIndexableTextContent":"Inherited from Comparable.<(_:_:). ","kind":"symbol","title":"<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/_(_:_:)-1aqv9","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.<(_:_:)."},{"rawIndexableTextContent":"Returns a new vector representing the maximum of the components of the two vectors. ","kind":"symbol","title":"max(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/max(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new vector representing the maximum of the components of the two vectors."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the point is on the line segment.  The point to compare.","kind":"symbol","title":"containsPoint(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/containsPoint(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the point is on the line segment."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/scaled(by:)-94kks","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a bounds from two points.  The first point. The second point. Discussion Unlike the init(min:max:) constructor, the order of the points doesn’t matter","kind":"symbol","title":"init(_:_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(_:_:)","interfaceLanguage":"swift"}},"summary":"Creates a bounds from two points."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/scaled(by:)-19jpq","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a color from a CoreGraphics color instance.  The core graphics color instance.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(_:)-25eby","interfaceLanguage":"swift"}},"summary":"Creates a color from a CoreGraphics color instance."},{"rawIndexableTextContent":"Euclid is a library for creating and manipulating 3D geometry using techniques such as extruding or “lathing” 2D paths to create solid 3D shapes, and CSG (Constructive Solid Geometry) to combine or subtract those shapes from one another. Overview Euclid is the underlying implementation for the open source ShapeScript scripting language and ShapeScript macOS app. Anything you can build in ShapeScript can be replicated programmatically in Swift using this library. If you would like to support the development of Euclid, please consider buying a copy of ShapeScript (the app itself is free, but there is an in-app purchase to unlock some features). You can also donate directly to the project via PayPal:  Note: Euclid is a fairly complex piece of code, at a fairly early stage of development. You should expect some bugs and breaking changes over the first few releases, and the documentation is a little sparse. Please report any issues you encounter, and I will do my best to fix them.","kind":"symbol","title":"Euclid","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid","interfaceLanguage":"swift"}},"summary":"Euclid is a library for creating and manipulating 3D geometry using techniques such as extruding or “lathing” 2D paths to create solid 3D shapes, and CSG (Constructive Solid Geometry) to combine or subtract those shapes from one another."},{"rawIndexableTextContent":"Creates a mesh by extruding a path along another path.  The shape to extrude into a mesh. The path in which to extrude the shape. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"extrude(_:along:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/extrude(_:along:faces:material:)","interfaceLanguage":"swift"}},"summary":"Creates a mesh by extruding a path along another path."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isFlipped","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/isFlipped","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The bounds of the polygon. ","kind":"symbol","title":"bounds","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/bounds","interfaceLanguage":"swift"}},"summary":"The bounds of the polygon."},{"rawIndexableTextContent":"Removes hairline cracks by inserting additional vertices without altering the shape.  Discussion This method is not always be successful in making a mesh watertight. Check isWatertight afterwards to verify.","kind":"symbol","title":"makeWatertight()","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/makeWatertight()","interfaceLanguage":"swift"}},"summary":"Removes hairline cracks by inserting additional vertices without altering the shape."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"roll","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/roll","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A Boolean value that indicates whether the mesh is watertight.  Discussion For example, the value is true if every edge is attached to at least 2 polygons. A mesh being watertight doesn’t verify that mesh is not self-intersecting or inside-out.","kind":"symbol","title":"isWatertight","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/isWatertight","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the mesh is watertight."},{"rawIndexableTextContent":"A control point that contributes to representing a path.  Overview A path point can represent a corner or a curve, and has a position, but no normal. Instead, the isCurved property  indicates if a point is sharp or smooth, allowing the normal to be inferred automatically when required.","kind":"symbol","title":"PathPoint","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint","interfaceLanguage":"swift"}},"summary":"A control point that contributes to representing a path."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"black","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/black","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new mesh representing the combined volume of the mesh parameter and the receiver, with inner faces removed.  Discussion ","kind":"symbol","title":"union(_:isCancelled:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/union(_:isCancelled:)-swift.method","interfaceLanguage":"swift"}},"summary":"Returns a new mesh representing the combined volume of the mesh parameter and the receiver, with inner faces removed."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"pitch","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/pitch","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A zero-length vector. ","kind":"symbol","title":"zero","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/zero","interfaceLanguage":"swift"}},"summary":"A zero-length vector."},{"rawIndexableTextContent":"Encodes this path point into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this path point into the given encoder."},{"rawIndexableTextContent":"Display the 3D shapes you created with meshes. Overview After creating some 3D shapes, you probably want to actually display them. Most of the Euclid library is completely self-contained, with no dependencies on any particular rendering technology or framework. However, when running on iOS or macOS you can take advantage of Euclid’s built-in SceneKit integration. This is demonstrated in the Example app included with the project. SceneKit is Apple’s high-level 3D engine, which can use either OpenGL or Metal for rendering on supported devices. Euclid provides extensions for creating an SCNGeometry from a Mesh, as well as converting Euclid Vector and Rotation types to SCNVector and SCNQuaternion respectively. The SceneKit integration makes it easy to display Euclid geometry on-screen, and to integrate with ARKit, etc. You can also use SceneKit to export Euclid-generated Mesh in standard 3D model formats such as DAE, STL or OBJ. Materials Interesting geometry is one thing, but to really bring a shape to life it needs colors and textures. Every Polygon has a material property that can be used to apply any kind of material you like on a per-polygon basis. All primitives and builder methods accept a material parameter which will apply that material to every polygon in the resultant Mesh. When you later combine meshes using CSG operations, the original materials from the Mesh that contributed to each part of the resultant shape are preserved. Before a material can be used with SceneKit, you need to convert the Euclid material to an SCNMaterial. If the material is already an SCNMaterial instance it will be used directly. If the material is a Color, a UI\/NSColor or UI\/NSImage it will be converted to an SCNMaterial automatically. For all other material types, you will need to do this conversion yourself. You can convert materials using the optional closure argument for Euclid’s SCNGeometry constructor, which receives the Euclid material as an input and returns an SCNMaterial. When serializing Euclid geometry using Codable, only specific material types can be supported. Currently, material serialization works for Strings, Ints, Color and any class that conforms to NSCoding (which includes many UIKit, AppKit and SceneKit types, such as UI\/NSColor, UI\/NSImage and SCNMaterial). Colors Euclid currently has no support for setting colors on a per-vertex basis, but you can apply colors to a Mesh or Polygon using the material property. The material property is of type AnyHashable which basically means it can be anything you want. You can set the material to an instance of Euclid’s Color, or you can use a UIColor or NSColor instead if you prefer. This approach is demonstrated in the Example app included in the project. Textures Euclid automatically adds 2D texture coordinates to the vertices of a Mesh created using primitives or builder methods. There is limited control over how those coordinates are specified at the moment, but they allow for simple spherical and cylindrical texture wrapping. To apply a texture image to a Mesh, store a UIImage or NSImage as the material property and it will be converted to an SCNMaterial automatically. If you want to do something more complex, such as applying both a color and texture to the same Mesh, or maybe including a normal map or some other material properties, you could create a custom material type to store all the properties you care about, or even assign an SCNMaterial directly as the material for your Euclid geometry.","kind":"article","title":"Rendering Meshes","headings":["Overview","Materials","Colors","Textures"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/RenderingMeshes","interfaceLanguage":"swift"}},"summary":"Display the 3D shapes you created with meshes."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/scaled(by:)-29v7y","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a composite path from an array of subpaths. ","kind":"symbol","title":"init(subpaths:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/init(subpaths:)","interfaceLanguage":"swift"}},"summary":"Creates a composite path from an array of subpaths."},{"rawIndexableTextContent":"Render the front faces of the polygon. ","kind":"symbol","title":"Mesh.Faces.front","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/front","interfaceLanguage":"swift"}},"summary":"Render the front faces of the polygon."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/...(_:)-7xdsm","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"Define a rotation from Euler angles applied in pitch\/yaw\/roll order pitch is the angle around the X axis, yaw is the angle around Y, and roll is the angle around Z ","kind":"symbol","title":"init(pitch:yaw:roll:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(pitch:yaw:roll:)","interfaceLanguage":"swift"}},"summary":"Define a rotation from Euler angles applied in pitch\/yaw\/roll order pitch is the angle around the X axis, yaw is the angle around Y, and roll is the angle around Z"},{"rawIndexableTextContent":"Define a quaternion from Euler angles roll is the angle around the Z axis, yaw is the angle around Y, and pitch is the angle around X. ","kind":"symbol","title":"init(roll:yaw:pitch:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(roll:yaw:pitch:)","interfaceLanguage":"swift"}},"summary":"Define a quaternion from Euler angles roll is the angle around the Z axis, yaw is the angle around Y, and pitch is the angle around X."},{"rawIndexableTextContent":"Returns a vector with its components multiplied by the value you provide. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/*(_:_:)-48gl1","interfaceLanguage":"swift"}},"summary":"Returns a vector with its components multiplied by the value you provide."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:). ","kind":"symbol","title":"..<(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/.._(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"end","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/end","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Comparable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/Comparable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a plane from a set of coplanar points describing a polygon.  Discussion The polygon can be convex or concave. The direction of the plane normal is based on the assumption that the points are wind in an anti-clockwise direction.","kind":"symbol","title":"init(points:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/init(points:)","interfaceLanguage":"swift"}},"summary":"Creates a plane from a set of coplanar points describing a polygon."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"zero","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/zero","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a line segment from a start and end point.  The start of the line segment. The end of the line segment.","kind":"symbol","title":"init(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/init(_:_:)","interfaceLanguage":"swift"}},"summary":"Creates a line segment from a start and end point."},{"rawIndexableTextContent":"Creates a copy of polygon with specified material. ","kind":"symbol","title":"with(material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/with(material:)","interfaceLanguage":"swift"}},"summary":"Creates a copy of polygon with specified material."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"clear","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/clear","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns a Boolean value that compares two line segments to provide a stable sort order.  The first line segment to compare. The second line segment to compare.","kind":"symbol","title":"<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/_(_:_:)-2si4j","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that compares two line segments to provide a stable sort order."},{"rawIndexableTextContent":"Tessellates polygon into triangles using the “ear clipping” method. ","kind":"symbol","title":"triangulate()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/triangulate()","interfaceLanguage":"swift"}},"summary":"Tessellates polygon into triangles using the “ear clipping” method."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/rotated(by:)-266e9","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(offset:rotation:scale:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/init(offset:rotation:scale:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create an extruded text model from an attributed string  The text to convert into a model The optional width at which to render the model. The depth at which to render the model. The number line segments are used to create a cubic or quadratic bezier curve. The material to apply to the model.","kind":"symbol","title":"init(text:width:depth:detail:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(text:width:depth:detail:material:)","interfaceLanguage":"swift"}},"summary":"Create an extruded text model from an attributed string"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A choice of the face directions that Euclid generates for polygons. ","kind":"symbol","title":"Mesh.Faces","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces","interfaceLanguage":"swift"}},"summary":"A choice of the face directions that Euclid generates for polygons."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether a point lies inside the polygon. ","kind":"symbol","title":"containsPoint(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/containsPoint(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether a point lies inside the polygon."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Define a rotation around the X axis ","kind":"symbol","title":"pitch(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/pitch(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the X axis"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a mesh that is the connection of multiple 3D paths.  The paths to connect. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"loft(_:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/loft(_:faces:material:)","interfaceLanguage":"swift"}},"summary":"Creates a mesh that is the connection of multiple 3D paths."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a bounds with min and max points.  The minimum value. The maximum value. Discussion If the value you provide for max is less than the value for min, the bounds is considered to be empty.","kind":"symbol","title":"init(min:max:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(min:max:)","interfaceLanguage":"swift"}},"summary":"Creates a bounds with min and max points."},{"rawIndexableTextContent":"Creates a mesh from an SCNGeometry with the material you provide.  The geometry to convert. The material to apply to the geometry.","kind":"symbol","title":"init(_:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(_:material:)","interfaceLanguage":"swift"}},"summary":"Creates a mesh from an SCNGeometry with the material you provide."},{"rawIndexableTextContent":"The size of the bounds. ","kind":"symbol","title":"size","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/size","interfaceLanguage":"swift"}},"summary":"The size of the bounds."},{"rawIndexableTextContent":"Creates a mesh by extruding a path along its face normal.  The path to extrude to create the mesh. The depth of the extrusion. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"extrude(_:depth:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/extrude(_:depth:faces:material:)","interfaceLanguage":"swift"}},"summary":"Creates a mesh by extruding a path along its face normal."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/*=(_:_:)-lsgo","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new path point by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new path point by decoding from the given decoder."},{"rawIndexableTextContent":"Returns a line that describes the intersection between this plane and the plane you provide. ","kind":"symbol","title":"intersection(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/intersection(with:)-4v7tg","interfaceLanguage":"swift"}},"summary":"Returns a line that describes the intersection between this plane and the plane you provide."},{"rawIndexableTextContent":"Inherited from Comparable.<=(_:_:). ","kind":"symbol","title":"<=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/_=(_:_:)-8q2nt","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.<=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(_:)-7xa5o","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Merges coplanar polygons that share one or more edges. ","kind":"symbol","title":"detessellate()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/detessellate()","interfaceLanguage":"swift"}},"summary":"Merges coplanar polygons that share one or more edges."},{"rawIndexableTextContent":"Returns a vector that represents the nearest point on the line you provide.  The line to compare.","kind":"symbol","title":"project(onto:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/project(onto:)-rksk","interfaceLanguage":"swift"}},"summary":"Returns a vector that represents the nearest point on the line you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"yellow","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/yellow","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"blue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/blue","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create a Path from a CGPath.  The CoreGraphics path to convert. The number line segments are used to create a cubic or quadratic bezier curve. Discussion The returned path may contain nested subpaths.","kind":"symbol","title":"init(cgPath:detail:color:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/init(cgPath:detail:color:)","interfaceLanguage":"swift"}},"summary":"Create a Path from a CGPath."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(_:)-fyhx","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a closed path by joining last point to first.  Discussion This method returns self if already closed, or if path cannot be closed","kind":"symbol","title":"closed()","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/closed()","interfaceLanguage":"swift"}},"summary":"Returns a closed path by joining last point to first."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"degrees","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/degrees","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a point that indicates the intersection of the line segement you provide.  Return Value The point of intersection, or nil if the segments don’t intersect. The line segment to compare.","kind":"symbol","title":"intersection(with:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/intersection(with:)","interfaceLanguage":"swift"}},"summary":"Returns a point that indicates the intersection of the line segement you provide."},{"rawIndexableTextContent":"Returns a point that indicates the Intersection between the lines.  Return Value Returns nil if the lines don’t intersect. The line to compare.","kind":"symbol","title":"intersection(with:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/intersection(with:)-2nysu","interfaceLanguage":"swift"}},"summary":"Returns a point that indicates the Intersection between the lines."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":" Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"magenta","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/magenta","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Flips face direction of polygons within the mesh. ","kind":"symbol","title":"inverted()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/inverted()","interfaceLanguage":"swift"}},"summary":"Flips face direction of polygons within the mesh."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/rotated(by:)-6owvr","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/rotated(by:)-3e445","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a vector from an array of coordinates.  An array of coordinate positions. Discussion Omitted values default to 0 and extra components are ignored.","kind":"symbol","title":"init(_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(_:)-63ct7","interfaceLanguage":"swift"}},"summary":"Creates a vector from an array of coordinates."},{"rawIndexableTextContent":"A distance or position in 3D space.  Overview Euclid doesn’t include 2D vector types. When working with primarily 2D shapes, such as  creating Path objects, omit the Z coordinate when constructing a Vector and it defaults to zero.","kind":"symbol","title":"Vector","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector","interfaceLanguage":"swift"}},"summary":"A distance or position in 3D space."},{"rawIndexableTextContent":"A planar polygon in 3D space.  Overview A polygon must be composed of three or more Vertex, and those vertices must all lie in the same plane. The edge of a polygon can be either convex or concave, but not self-intersecting.","kind":"symbol","title":"Polygon","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon","interfaceLanguage":"swift"}},"summary":"A planar polygon in 3D space."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/rotated(by:)-8zjfc","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The vertices suitable for constructing a polygon from the path.  Discussion Vertices include normals and uv coordinates normalized to the bounding rectangle of the path. The value is nil if path is open or has subpaths.","kind":"symbol","title":"faceVertices","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/faceVertices","interfaceLanguage":"swift"}},"summary":"The vertices suitable for constructing a polygon from the path."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"atan2(y:x:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/atan2(y:x:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/-(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(_:texcoord:color:isCurved:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/init(_:texcoord:color:isCurved:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A 3D surface made up of multiple polygons.  Overview A mesh surface can be convex or concave, and can have zero volume (for example, a flat shape such as a square) but shouldn’t contain holes or exposed back-faces. The result of constructive solid geometry operations on meshes that have holes or exposed back-faces is undefined.","kind":"symbol","title":"Mesh","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh","interfaceLanguage":"swift"}},"summary":"A 3D surface made up of multiple polygons."},{"rawIndexableTextContent":"Create a closed elliptical path ","kind":"symbol","title":"ellipse(width:height:segments:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/ellipse(width:height:segments:color:)","interfaceLanguage":"swift"}},"summary":"Create a closed elliptical path"},{"rawIndexableTextContent":"Loads a mesh from a file using any format supported by SceneKit,  with optional material mapping.  The url of the file to to load. A closure that converts a SceneKit material into a material.","kind":"symbol","title":"init(url:materialLookup:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(url:materialLookup:)","interfaceLanguage":"swift"}},"summary":"Loads a mesh from a file using any format supported by SceneKit,  with optional material mapping."},{"rawIndexableTextContent":"The optional material associated with the polygon. ","kind":"symbol","title":"material","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/material-swift.property","interfaceLanguage":"swift"}},"summary":"The optional material associated with the polygon."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A plane at the origin, aligned with the X and Y coordinates. ","kind":"symbol","title":"xy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/xy","interfaceLanguage":"swift"}},"summary":"A plane at the origin, aligned with the X and Y coordinates."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"green","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/green","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the edge vertices suitable for converting into a solid shape using lathe or extrusion.  Return Value The edge vertices, or an empty array if path has subpaths. The wrap mode to determine to edge vertices.","kind":"symbol","title":"edgeVertices(for:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/edgeVertices(for:)","interfaceLanguage":"swift"}},"summary":"Returns the edge vertices suitable for converting into a solid shape using lathe or extrusion."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"orange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/orange","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new mesh reprenting only the volume exclusively occupied by one shape or the other, but not both.  Discussion ","kind":"symbol","title":"xor(_:isCancelled:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/xor(_:isCancelled:)-swift.method","interfaceLanguage":"swift"}},"summary":"Returns a new mesh reprenting only the volume exclusively occupied by one shape or the other, but not both."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The points that make up the corners of the bounds. ","kind":"symbol","title":"corners","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/corners","interfaceLanguage":"swift"}},"summary":"The points that make up the corners of the bounds."},{"rawIndexableTextContent":"Creates a new mesh from an array of polygons. ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a new mesh from an array of polygons."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"+=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/+=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The type used as a material for a given polygon. ","kind":"symbol","title":"Mesh.Material","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Material","interfaceLanguage":"swift"}},"summary":"The type used as a material for a given polygon."},{"rawIndexableTextContent":"Returns a new mesh that retains the shape of the receiver, but with the intersecting area colored using material from the parameter.  Discussion ","kind":"symbol","title":"stencil(_:isCancelled:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/stencil(_:isCancelled:)-swift.method","interfaceLanguage":"swift"}},"summary":"Returns a new mesh that retains the shape of the receiver, but with the intersecting area colored using material from the parameter."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/scaled(by:)-1dtbr","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Encodes this date into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this date into the given encoder."},{"rawIndexableTextContent":"Returns a vector with its components divided by the value you provide. ","kind":"symbol","title":"\/(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/\/(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a vector with its components divided by the value you provide."},{"rawIndexableTextContent":"The texture coordinate of the path point. ","kind":"symbol","title":"texcoord","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/texcoord","interfaceLanguage":"swift"}},"summary":"The texture coordinate of the path point."},{"rawIndexableTextContent":"A struct that represents an infinite 2D plane in 3D space.  Overview A plane is defined by a normal, a surface normal Vector, and w,  the distance from the the center of the plane from the world origin coordinates.","kind":"symbol","title":"Plane","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane","interfaceLanguage":"swift"}},"summary":"A struct that represents an infinite 2D plane in 3D space."},{"rawIndexableTextContent":"Returns one or more polygons needed to fill the path.  Discussion Polygon vertices include normals and uv coordinates normalized to the bounding rectangle of the path.","kind":"symbol","title":"facePolygons(material:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/facePolygons(material:)","interfaceLanguage":"swift"}},"summary":"Returns one or more polygons needed to fill the path."},{"rawIndexableTextContent":"Efficiently form union from multiple meshes ","kind":"symbol","title":"union(_:isCancelled:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/union(_:isCancelled:)-swift.type.method","interfaceLanguage":"swift"}},"summary":"Efficiently form union from multiple meshes"},{"rawIndexableTextContent":"Expands the boundaries of this bounds to include the volume of it and the bounds you provide.  The bounds to be included.","kind":"symbol","title":"formUnion(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/formUnion(_:)","interfaceLanguage":"swift"}},"summary":"Expands the boundaries of this bounds to include the volume of it and the bounds you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"pitch","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/pitch","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/rotated(by:)-4qxyv","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.<=(_:_:). ","kind":"symbol","title":"<=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/_=(_:_:)-j6oq","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.<=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/rotated(by:)-8zgb0","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The plane that describes the polygon’s face. ","kind":"symbol","title":"plane","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/plane","interfaceLanguage":"swift"}},"summary":"The plane that describes the polygon’s face."},{"rawIndexableTextContent":"The red, green, blue, and alpha components of the color. ","kind":"symbol","title":"components","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/components","interfaceLanguage":"swift"}},"summary":"The red, green, blue, and alpha components of the color."},{"rawIndexableTextContent":"The collection of vertices that make up the polygon. ","kind":"symbol","title":"vertices","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/vertices","interfaceLanguage":"swift"}},"summary":"The collection of vertices that make up the polygon."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"degrees(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/degrees(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Define a rotation from a quaternion ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(_:)-5w6mn","interfaceLanguage":"swift"}},"summary":"Define a rotation from a quaternion"},{"rawIndexableTextContent":"Linearly interpolate between two vertices.  Return Value A new vertex with values interpolated between the two vertices. The vertex to interpolate towards. The unit value that indicates the distance between of this vertex and the target vertex. Discussion Interpolation is applied to the position, texture coordinate and normal.","kind":"symbol","title":"lerp(_:_:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/lerp(_:_:)","interfaceLanguage":"swift"}},"summary":"Linearly interpolate between two vertices."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/scaled(by:)-6epo6","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Extends the vector by a vector you provide. ","kind":"symbol","title":"+=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/+=(_:_:)","interfaceLanguage":"swift"}},"summary":"Extends the vector by a vector you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/scaled(by:)-5dvvh","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the distance of the vector representing a point to a line in 3D.  The line to compare.","kind":"symbol","title":"distance(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/distance(from:)-3eglz","interfaceLanguage":"swift"}},"summary":"Returns the distance of the vector representing a point to a line in 3D."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the lines intersect.  The line to compare.","kind":"symbol","title":"intersects(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/intersects(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the lines intersect."},{"rawIndexableTextContent":"Multiplies the components of the vector by the value you provide. ","kind":"symbol","title":"*=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/*=(_:_:)","interfaceLanguage":"swift"}},"summary":"Multiplies the components of the vector by the value you provide."},{"rawIndexableTextContent":"Encodes this mesh into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this mesh into the given encoder."},{"rawIndexableTextContent":"A Boolean value that indicates whether the mesh includes vertex colors. ","kind":"symbol","title":"hasVertexColors","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/hasVertexColors","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the mesh includes vertex colors."},{"rawIndexableTextContent":"The color of the path point. ","kind":"symbol","title":"color","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/color","interfaceLanguage":"swift"}},"summary":"The color of the path point."},{"rawIndexableTextContent":"Vertex choices shrink to the smallest choice on a path, rendering the path directly. ","kind":"symbol","title":"Mesh.WrapMode.shrink","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode\/shrink","interfaceLanguage":"swift"}},"summary":"Vertex choices shrink to the smallest choice on a path, rendering the path directly."},{"rawIndexableTextContent":"Creates a copy of the color updated with the alpha you provide. ","kind":"symbol","title":"withAlpha(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/withAlpha(_:)","interfaceLanguage":"swift"}},"summary":"Creates a copy of the color updated with the alpha you provide."},{"rawIndexableTextContent":"Replaces a material with another that you provide. ","kind":"symbol","title":"replacing(_:with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/replacing(_:with:)","interfaceLanguage":"swift"}},"summary":"Replaces a material with another that you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Creates an identity Rotation ","kind":"symbol","title":"init()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init()","interfaceLanguage":"swift"}},"summary":"Creates an identity Rotation"},{"rawIndexableTextContent":"Creates a new bounds by joining the current bounds to another.  The bounds to be included.","kind":"symbol","title":"union(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/union(_:)","interfaceLanguage":"swift"}},"summary":"Creates a new bounds by joining the current bounds to another."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"twoPi","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/twoPi","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotation","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/rotation","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/scaled(by:)-6axqe","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the distance of this line from another line.  Return Value The distance to the line. The line to compare.","kind":"symbol","title":"distance(from:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/distance(from:)-77i61","interfaceLanguage":"swift"}},"summary":"Returns the distance of this line from another line."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A struct that represents a color in RGBA format.  Overview Color can be used as a material.","kind":"symbol","title":"Color","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color","interfaceLanguage":"swift"}},"summary":"A struct that represents a color in RGBA format."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/-(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/rotated(by:)-3qnnh","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"identity","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/identity","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a curved path point at the provided position using the location you provide.  The location of the path point. The texture coordinate corresponding to this path point.","kind":"symbol","title":"curve(_:texcoord:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/curve(_:texcoord:color:)","interfaceLanguage":"swift"}},"summary":"Creates a curved path point at the provided position using the location you provide."},{"rawIndexableTextContent":"Creates a new mesh by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new mesh by decoding from the given decoder."},{"rawIndexableTextContent":"Creates a mesh by filling a path to form one or more polygons.  The shape to be filled. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"fill(_:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/fill(_:faces:material:)","interfaceLanguage":"swift"}},"summary":"Creates a mesh by filling a path to form one or more polygons."},{"rawIndexableTextContent":"A struct that represents a path as a sequence of path points making up a line or curve.  Overview The line or curve is formed from straight segments joined end-to-end. A Path can be either open (a polyline) or closed (a polygon), but should not be self-intersecting or otherwise degenerate. A path may be formed from multiple subpaths, which can be accessed via the subpaths property. A closed, flat Path without nested subpaths can be converted into a Polygon, but it can also be used for other purposes, such as defining a cross-section or profile of a 3D shape. Paths are typically 2-dimensional, but because PathPoint positions have a Z coordinate, they are not required to be. Even a flat Path (where all points lie on the same plane) can be translated or rotated so that its points do not necessarily lie on the XY plane.","kind":"symbol","title":"Path","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path","interfaceLanguage":"swift"}},"summary":"A struct that represents a path as a sequence of path points making up a line or curve."},{"rawIndexableTextContent":"Creates a new polygon by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new polygon by decoding from the given decoder."},{"rawIndexableTextContent":"Creates a new vector by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new vector by decoding from the given decoder."},{"rawIndexableTextContent":"A struct that is an alternative, more compact, way to represent an orientation or rotation in 3D space.  Overview A quaternions can be converted to and from an axis-vector and angle, or a set of 3 Euler angles (pitch, yaw and roll), as well as to and from a Rotation.","kind":"symbol","title":"Quaternion","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion","interfaceLanguage":"swift"}},"summary":"A struct that is an alternative, more compact, way to represent an orientation or rotation in 3D space."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.>=(_:_:). ","kind":"symbol","title":">=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/_=(_:_:)-9rm6o","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(radians:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/init(radians:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new mesh created by subtracting the volume of the mesh parameter from the receiver.  Discussion ","kind":"symbol","title":"subtract(_:isCancelled:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/subtract(_:isCancelled:)","interfaceLanguage":"swift"}},"summary":"Returns a new mesh created by subtracting the volume of the mesh parameter from the receiver."},{"rawIndexableTextContent":"Returns the angle between this vector and the plane that you provide.  The plane to compare.","kind":"symbol","title":"angle(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/angle(with:)-9sfg1","interfaceLanguage":"swift"}},"summary":"Returns the angle between this vector and the plane that you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"dot(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/dot(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/...(_:)-49h2f","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A plane at the origin, aligned with the Y and Z coordinates. ","kind":"symbol","title":"yz","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/yz","interfaceLanguage":"swift"}},"summary":"A plane at the origin, aligned with the Y and Z coordinates."},{"rawIndexableTextContent":"Creates a line from an origin and direction ","kind":"symbol","title":"init(origin:direction:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/init(origin:direction:)","interfaceLanguage":"swift"}},"summary":"Creates a line from an origin and direction"},{"rawIndexableTextContent":"Creates a new mesh that is the combination of the provided meshes. ","kind":"symbol","title":"merge(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/merge(_:)-swift.type.method","interfaceLanguage":"swift"}},"summary":"Creates a new mesh that is the combination of the provided meshes."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Creates a new line segment by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new line segment by decoding from the given decoder."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"w","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/w","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new vector from the SceneKit vector.  The SceneKit vector.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(_:)-228p6","interfaceLanguage":"swift"}},"summary":"Creates a new vector from the SceneKit vector."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:). ","kind":"symbol","title":"..<(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/.._(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:)."},{"rawIndexableTextContent":"Create a path from a start and end point ","kind":"symbol","title":"line(_:_:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/line(_:_:color:)","interfaceLanguage":"swift"}},"summary":"Create a path from a start and end point"},{"rawIndexableTextContent":"Creates a size\/scale vector from an array of two coordinates.  An array of coordinate positions. Discussion Omitted values are defaulted to 0 and extra components are ignored. An empty array of coordinates defaults to one.","kind":"symbol","title":"init(size:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(size:)-8b34m","interfaceLanguage":"swift"}},"summary":"Creates a size\/scale vector from an array of two coordinates."},{"rawIndexableTextContent":"Inherited from Comparable....(_:_:). ","kind":"symbol","title":"...(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/...(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create a mesh from an SCNGeometry object with optional material mapping.  The geometry to convert into a mesh. A closure that converts a SceneKit material into a material.","kind":"symbol","title":"init(_:materialLookup:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(_:materialLookup:)-7p5hd","interfaceLanguage":"swift"}},"summary":"Create a mesh from an SCNGeometry object with optional material mapping."},{"rawIndexableTextContent":"Efficiently perform stencil with multiple meshes ","kind":"symbol","title":"stencil(_:isCancelled:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/stencil(_:isCancelled:)-swift.type.method","interfaceLanguage":"swift"}},"summary":"Efficiently perform stencil with multiple meshes"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/-(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A Boolean value that indicates whether the mesh includes texture coordinates. ","kind":"symbol","title":"hasTexcoords","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/hasTexcoords","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the mesh includes texture coordinates."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/rotated(by:)-9koyv","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates an axis-aligned cuboid mesh.  The center point of the mesh. The size of the cuboid mesh. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"cube(center:size:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/cube(center:size:faces:material:)-7wdr2","interfaceLanguage":"swift"}},"summary":"Creates an axis-aligned cuboid mesh."},{"rawIndexableTextContent":"Creates an array of glyph contours from a string and font you provide.  The text to convert. The font to use for the text glyphs. The optional width at which to render the paths. The number line segments are used to create a cubic or quadratic bezier curve.","kind":"symbol","title":"text(_:font:width:detail:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/text(_:font:width:detail:)","interfaceLanguage":"swift"}},"summary":"Creates an array of glyph contours from a string and font you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/rotated(by:)-y8cz","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a rotationally symmetrical mesh by rotating the path you provide around an axis.  The path to use as the profile for the mesh. The number of slices that make up the lathed mesh. The number of segments used to make the pole. A Boolean value that indicates whether to add detail to the poles. The direction the polygon faces. The mode in which the vertexes are mapped to edges. The optional material for the mesh. Discussion The path consists of an array of x,y coordinate pairs that define the profile of the shape. Some notes on path coordinates: The path can be open or closed. Define a closed path by ending with the same coordinate pair that you started with The path can be placed on either the left or right of the Y axis, however the behavior is undefined for paths that cross the Y axis Open paths that do not start and end on the Y axis will produce a shape with a hole in it","kind":"symbol","title":"lathe(_:slices:poleDetail:addDetailForFlatPoles:faces:wrapMode:material:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/lathe(_:slices:poleDetail:addDetailForFlatPoles:faces:wrapMode:material:)","interfaceLanguage":"swift"}},"summary":"Creates a rotationally symmetrical mesh by rotating the path you provide around an axis."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"offset","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/offset","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The center of the bounds. ","kind":"symbol","title":"center","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/center","interfaceLanguage":"swift"}},"summary":"The center of the bounds."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"pi","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/pi","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a Boolean value that compares two vectors to provide a stable sort order. ","kind":"symbol","title":"<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/_(_:_:)-9obdn","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that compares two vectors to provide a stable sort order."},{"rawIndexableTextContent":"The color for the vertex. ","kind":"symbol","title":"color","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/color","interfaceLanguage":"swift"}},"summary":"The color for the vertex."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"\/=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/\/=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new vector by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new vector by decoding from the given decoder."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/scaled(by:)-8sjrv","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A closure that converts a SceneKit material into a material. ","kind":"symbol","title":"Mesh.MaterialProvider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/MaterialProvider","interfaceLanguage":"swift"}},"summary":"A closure that converts a SceneKit material into a material."},{"rawIndexableTextContent":"Encodes this date into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this date into the given encoder."},{"rawIndexableTextContent":"The direction of the line segment as a normalized vector. ","kind":"symbol","title":"direction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/direction","interfaceLanguage":"swift"}},"summary":"The direction of the line segment as a normalized vector."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Comparable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/Comparable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Reduces the vector by a vector you provide. ","kind":"symbol","title":"-=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/-=(_:_:)","interfaceLanguage":"swift"}},"summary":"Reduces the vector by a vector you provide."},{"rawIndexableTextContent":"Encodes this line into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this line into the given encoder."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the angle between this vector and another that you provide.  The vector to compare.","kind":"symbol","title":"angle(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/angle(with:)-29paf","interfaceLanguage":"swift"}},"summary":"Returns the angle between this vector and another that you provide."},{"rawIndexableTextContent":"Vertex choices shrink to the smallest choice on a path, rendering the path directly.  Discussion The same effect as Mesh.WrapMode.shrink.","kind":"symbol","title":"Mesh.WrapMode.default","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode\/default","interfaceLanguage":"swift"}},"summary":"Vertex choices shrink to the smallest choice on a path, rendering the path directly."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"white","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/white","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a bounds from a list of bounds.  The bounds to accumulate into a larger bounds.","kind":"symbol","title":"init(bounds:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(bounds:)","interfaceLanguage":"swift"}},"summary":"Creates a bounds from a list of bounds."},{"rawIndexableTextContent":"Indicates whether all the path’s points lie on as single plane. ","kind":"symbol","title":"isPlanar","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/isPlanar","interfaceLanguage":"swift"}},"summary":"Indicates whether all the path’s points lie on as single plane."},{"rawIndexableTextContent":"Encodes this plane into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this plane into the given encoder."},{"rawIndexableTextContent":"Creates a new path by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new path by decoding from the given decoder."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/*=(_:_:)-5ic2j","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:_:). ","kind":"symbol","title":"..<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/.._(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:_:)."},{"rawIndexableTextContent":"A struct that represents an orientation or rotation in 3D space.  Overview Internally, a rotation is stored as a 3x3 matrix, but that’s an implementation detail that may change in future. A rotation can be converted to and from an axis vector and angle, or a set of 3 Euler angles (pitch, yaw and roll).","kind":"symbol","title":"Rotation","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation","interfaceLanguage":"swift"}},"summary":"A struct that represents an orientation or rotation in 3D space."},{"rawIndexableTextContent":"The position  of the path point. ","kind":"symbol","title":"position","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/position","interfaceLanguage":"swift"}},"summary":"The position  of the path point."},{"rawIndexableTextContent":"Returns a Boolean value that indicates if the plane you provide intersects this bounds.  The plane to compare.","kind":"symbol","title":"intersects(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/intersects(_:)-7br6p","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates if the plane you provide intersects this bounds."},{"rawIndexableTextContent":"Define a rotation around the Y axis ","kind":"symbol","title":"yaw(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/yaw(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the Y axis"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"slerp(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/slerp(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns a vector that is the sum of the vectors you provide.  The first vector. The second vector.","kind":"symbol","title":"+(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/+(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a vector that is the sum of the vectors you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaleCorrected(for:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/scaleCorrected(for:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.>=(_:_:). ","kind":"symbol","title":">=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/_=(_:_:)-5nk27","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>=(_:_:)."},{"rawIndexableTextContent":"Inherited from Comparable.>(_:_:). ","kind":"symbol","title":">(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/_(_:_:)-7i9lp","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>(_:_:)."},{"rawIndexableTextContent":"The second component of the vector, frequently representing the value on the Y axis. ","kind":"symbol","title":"y","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/y","interfaceLanguage":"swift"}},"summary":"The second component of the vector, frequently representing the value on the Y axis."},{"rawIndexableTextContent":"A Boolean value that indicates whether the bounds is empty. ","kind":"symbol","title":"isEmpty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/isEmpty","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the bounds is empty."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"asin(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/asin(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a plane from a point and surface normal ","kind":"symbol","title":"init(normal:pointOnPlane:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/init(normal:pointOnPlane:)","interfaceLanguage":"swift"}},"summary":"Creates a plane from a point and surface normal"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/-(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a path point at the provided position using the location you provide.  The location of the path point. The texture coordinate corresponding to this path point.","kind":"symbol","title":"point(_:texcoord:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/point(_:texcoord:color:)","interfaceLanguage":"swift"}},"summary":"Creates a path point at the provided position using the location you provide."},{"rawIndexableTextContent":"Creates a quadratic bezier spline  The control points for the curve. The number line segments are used to create a cubic or quadratic bezier curve.","kind":"symbol","title":"curve(_:detail:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/curve(_:detail:)","interfaceLanguage":"swift"}},"summary":"Creates a quadratic bezier spline"},{"rawIndexableTextContent":"A vertex represent a point in three dimension space with additional characteristics.  Overview The additional characteristics (normal and texcoord) define how to represent the point in space when combined with other vertex instances to create a polygon. The position of each Vertex is automatically quantized (rounded to the nearest point in a very fine grid) in order to avoid the creation of very tiny polygons, or hairline cracks in surfaces. To avoid accumulating rounding errors avoid applying multiple Transform to the same geometry in sequence.","kind":"symbol","title":"Vertex","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex","interfaceLanguage":"swift"}},"summary":"A vertex represent a point in three dimension space with additional characteristics."},{"rawIndexableTextContent":"Returns a new bounds inset by specified amount.  Discussion Use negative values to expand the bounds.","kind":"symbol","title":"inset(by:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/inset(by:)-49ykf","interfaceLanguage":"swift"}},"summary":"Returns a new bounds inset by specified amount."},{"rawIndexableTextContent":"Returns the  trigonometric sine value for the angle you provide.  The angle to use to calculate the sine.","kind":"symbol","title":"sin(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/sin(_:)","interfaceLanguage":"swift"}},"summary":"Returns the  trigonometric sine value for the angle you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"z","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/z","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The length of the line segment. ","kind":"symbol","title":"length","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/length","interfaceLanguage":"swift"}},"summary":"The length of the line segment."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/scaled(by:)-84xdd","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Divides the components of the vector by the value you provide. ","kind":"symbol","title":"\/=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/\/=(_:_:)","interfaceLanguage":"swift"}},"summary":"Divides the components of the vector by the value you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(scnGeometry:materialLookup:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(scnGeometry:materialLookup:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether a point is on the plane. ","kind":"symbol","title":"containsPoint(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/containsPoint(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether a point is on the plane."},{"rawIndexableTextContent":"Create a closed circular path ","kind":"symbol","title":"circle(radius:segments:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/circle(radius:segments:color:)","interfaceLanguage":"swift"}},"summary":"Create a closed circular path"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A list of the subpaths that make up the path.  Discussion For paths without nested subpaths, this will return an array containing only self.","kind":"symbol","title":"subpaths","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/subpaths","interfaceLanguage":"swift"}},"summary":"A list of the subpaths that make up the path."},{"rawIndexableTextContent":"The blue component of the color. ","kind":"symbol","title":"b","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/b","interfaceLanguage":"swift"}},"summary":"The blue component of the color."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether line segement intersects.  The line segment to compare.","kind":"symbol","title":"intersects(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/intersects(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether line segement intersects."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"The collection of materials used for the mash. ","kind":"symbol","title":"materials","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/materials","interfaceLanguage":"swift"}},"summary":"The collection of materials used for the mash."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/-=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The maximum location for the bounds. ","kind":"symbol","title":"max","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/max","interfaceLanguage":"swift"}},"summary":"The maximum location for the bounds."},{"rawIndexableTextContent":"The unique polygon edges in the mesh. ","kind":"symbol","title":"uniqueEdges","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/uniqueEdges","interfaceLanguage":"swift"}},"summary":"The unique polygon edges in the mesh."},{"rawIndexableTextContent":"Indicates whether the point is curved.  Discussion If false, the path point is sharp.","kind":"symbol","title":"isCurved","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/isCurved","interfaceLanguage":"swift"}},"summary":"Indicates whether the point is curved."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"+(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/+(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a rotation from a SceneKit quaternion.  The quaternion to convert.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(_:)-68leo","interfaceLanguage":"swift"}},"summary":"Creates a rotation from a SceneKit quaternion."},{"rawIndexableTextContent":"The collection of polygons that make up the mesh. ","kind":"symbol","title":"polygons","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/polygons","interfaceLanguage":"swift"}},"summary":"The collection of polygons that make up the mesh."},{"rawIndexableTextContent":"Define a quaternion from an axis vector and an angle ","kind":"symbol","title":"init(axis:angle:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(axis:angle:)","interfaceLanguage":"swift"}},"summary":"Define a quaternion from an axis vector and an angle"},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/...(_:)-3s6ak","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"cyan","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/cyan","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create a color from RGB values and optional alpha component ","kind":"symbol","title":"init(_:_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(_:_:_:_:)","interfaceLanguage":"swift"}},"summary":"Create a color from RGB values and optional alpha component"},{"rawIndexableTextContent":"A Boolean value that indicates whether the polygon includes vertex colors. ","kind":"symbol","title":"hasVertexColors","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/hasVertexColors","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the polygon includes vertex colors."},{"rawIndexableTextContent":"Creates an array of glyph contours from an attributed string  The text to convert. The optional width at which to render the paths. The number line segments are used to create a cubic or quadratic bezier curve.","kind":"symbol","title":"text(_:width:detail:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/text(_:width:detail:)","interfaceLanguage":"swift"}},"summary":"Creates an array of glyph contours from an attributed string"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"y","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/y","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/rotated(by:)-7qu0o","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A vector with all coordinates set to 1. ","kind":"symbol","title":"one","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/one","interfaceLanguage":"swift"}},"summary":"A vector with all coordinates set to 1."},{"rawIndexableTextContent":"Create a bounds from an array of points.  The array of points that the bounds surrounds.","kind":"symbol","title":"init(points:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(points:)","interfaceLanguage":"swift"}},"summary":"Create a bounds from an array of points."},{"rawIndexableTextContent":"Creates a path from an array of  path points. ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a path from an array of  path points."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scale(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/scale(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Decreaeses the boundaries of this bounds to the intersection of it and the other bounds you provide.  The bounds with which to intersect.","kind":"symbol","title":"formIntersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/formIntersection(_:)","interfaceLanguage":"swift"}},"summary":"Decreaeses the boundaries of this bounds to the intersection of it and the other bounds you provide."},{"rawIndexableTextContent":"The normal for the vertex. ","kind":"symbol","title":"normal","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/normal","interfaceLanguage":"swift"}},"summary":"The normal for the vertex."},{"rawIndexableTextContent":"A struct that represents an infinite line in 3D space.  Overview A line is defined by an origin point and a normalized direction vector.","kind":"symbol","title":"Line","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line","interfaceLanguage":"swift"}},"summary":"A struct that represents an infinite line in 3D space."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"up","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/up","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Create a bounds from an array of points.  The array of polygons that the bounds surrounds.","kind":"symbol","title":"init(polygons:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(polygons:)","interfaceLanguage":"swift"}},"summary":"Create a bounds from an array of points."},{"rawIndexableTextContent":"The surface normal vector.  Discussion A surface normal vector is perpendicular to the plane.","kind":"symbol","title":"normal","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/normal","interfaceLanguage":"swift"}},"summary":"The surface normal vector."},{"rawIndexableTextContent":"An axially-aligned bounding box for a 3D shape or collection of shapes. ","kind":"symbol","title":"Bounds","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds","interfaceLanguage":"swift"}},"summary":"An axially-aligned bounding box for a 3D shape or collection of shapes."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotate(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/rotate(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new mesh by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new mesh by decoding from the given decoder."},{"rawIndexableTextContent":"Linearly interpolate between two colors ","kind":"symbol","title":"lerp(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/lerp(_:_:)","interfaceLanguage":"swift"}},"summary":"Linearly interpolate between two colors"},{"rawIndexableTextContent":"Efficiently compute intersection of multiple meshes ","kind":"symbol","title":"intersection(_:isCancelled:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/intersection(_:isCancelled:)","interfaceLanguage":"swift"}},"summary":"Efficiently compute intersection of multiple meshes"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/rotated(by:)-38lip","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a color from a luminance value and optional alpha component. ","kind":"symbol","title":"init(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(_:_:)","interfaceLanguage":"swift"}},"summary":"Creates a color from a luminance value and optional alpha component."},{"rawIndexableTextContent":"Creates a polygon from a set of vertex positions.  Discussion Vertex normals will be set to match face normal.","kind":"symbol","title":"init(_:material:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/init(_:material:)-5ryug","interfaceLanguage":"swift"}},"summary":"Creates a polygon from a set of vertex positions."},{"rawIndexableTextContent":"Returns a normalized vector..  Return Value The normalized vector with a length of 1, or the zero vector if the length is 0.","kind":"symbol","title":"normalized()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/normalized()","interfaceLanguage":"swift"}},"summary":"Returns a normalized vector.."},{"rawIndexableTextContent":"Provides a stable sort order for Planes ","kind":"symbol","title":"<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/_(_:_:)-6eeco","interfaceLanguage":"swift"}},"summary":"Provides a stable sort order for Planes"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"components","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/components","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"roll","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/roll","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new vector by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new vector by decoding from the given decoder."},{"rawIndexableTextContent":"Tessellates the meshes polygons into triangles. ","kind":"symbol","title":"triangulate()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/triangulate()","interfaceLanguage":"swift"}},"summary":"Tessellates the meshes polygons into triangles."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/*(_:_:)-2drke","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"start","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/start","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The plane upon which this path resides. ","kind":"symbol","title":"plane","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/plane","interfaceLanguage":"swift"}},"summary":"The plane upon which this path resides."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Efficiently xor multiple meshes ","kind":"symbol","title":"xor(_:isCancelled:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/xor(_:isCancelled:)-swift.type.method","interfaceLanguage":"swift"}},"summary":"Efficiently xor multiple meshes"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translate(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/translate(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Efficiently stroke a set of line segments (useful for drawing wireframes)  The collection of lines to stroke. The line width of the strokes. The number line segments are used to create a cubic or quadratic bezier curve. The optional material for the mesh.","kind":"symbol","title":"stroke(_:width:detail:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/stroke(_:width:detail:material:)-uzi1","interfaceLanguage":"swift"}},"summary":"Efficiently stroke a set of line segments (useful for drawing wireframes)"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"right","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/right","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Define a rotation around the Z axis ","kind":"symbol","title":"roll(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/roll(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the Z axis"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isNormalized","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/isNormalized","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the flip-side of the plane. ","kind":"symbol","title":"inverted()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/inverted()","interfaceLanguage":"swift"}},"summary":"Returns the flip-side of the plane."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:_:). ","kind":"symbol","title":"..<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/.._(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/*(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"yaw","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/yaw","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A Boolean value that indicates whether the polygon includes texture coordinates. ","kind":"symbol","title":"hasTexcoords","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/hasTexcoords","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the polygon includes texture coordinates."},{"rawIndexableTextContent":"The bounds of the path. ","kind":"symbol","title":"bounds","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/bounds","interfaceLanguage":"swift"}},"summary":"The bounds of the path."},{"rawIndexableTextContent":"Creates a vector from the values you provide.  The x value for the vector. The y value for the vector. The z value for the vector.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"Creates a vector from the values you provide."},{"rawIndexableTextContent":"Encodes this path into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this path into the given encoder."},{"rawIndexableTextContent":"Inherited from Comparable.<=(_:_:). ","kind":"symbol","title":"<=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/_=(_:_:)-1oq2t","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.<=(_:_:)."},{"rawIndexableTextContent":"Render the back faces of the polygon. ","kind":"symbol","title":"Mesh.Faces.back","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/back","interfaceLanguage":"swift"}},"summary":"Render the back faces of the polygon."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a vertex from a flat array of values.  The array of values. Discussion The first three values are applies as the position of the vertex, the second three are applied as the vertex normal, and the last two make up the texture coordinates. Values beyond the eighth element are ignored.","kind":"symbol","title":"init(_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a vertex from a flat array of values."},{"rawIndexableTextContent":"Returns a vector with its components multiplied by the value you provide. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/*(_:_:)-5mcy5","interfaceLanguage":"swift"}},"summary":"Returns a vector with its components multiplied by the value you provide."},{"rawIndexableTextContent":"Encodes this date into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this date into the given encoder."},{"rawIndexableTextContent":"The bounds of the mesh. ","kind":"symbol","title":"bounds","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/bounds","interfaceLanguage":"swift"}},"summary":"The bounds of the mesh."},{"rawIndexableTextContent":"Vertex choices include points around a path, creating a tube around the path. ","kind":"symbol","title":"Mesh.WrapMode.tube","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode\/tube","interfaceLanguage":"swift"}},"summary":"Vertex choices include points around a path, creating a tube around the path."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"+(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/+(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"radians(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/radians(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/rotated(by:)-57p4w","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Encodes this polygon into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this polygon into the given encoder."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/...(_:)-14arr","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"Inherited from Comparable....(_:_:). ","kind":"symbol","title":"...(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/...(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"radians","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/radians","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable....(_:_:). ","kind":"symbol","title":"...(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/...(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:_:)."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:_:). ","kind":"symbol","title":"..<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/.._(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":" Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/scaled(by:)-20sq4","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"identity","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/identity","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The alpha component of the color. ","kind":"symbol","title":"a","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/a","interfaceLanguage":"swift"}},"summary":"The alpha component of the color."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/...(_:)-4yucl","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"Efficiently subtract multiple meshes ","kind":"symbol","title":"difference(_:isCancelled:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/difference(_:isCancelled:)","interfaceLanguage":"swift"}},"summary":"Efficiently subtract multiple meshes"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/-=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/rotated(by:)-4iaqb","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"origin","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/origin","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a cube mesh.  The center point of the mesh. The size of the cuboid mesh. The direction the polygon faces. The optional material for the mesh.","kind":"symbol","title":"cube(center:size:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/cube(center:size:faces:material:)-imdm","interfaceLanguage":"swift"}},"summary":"Creates a cube mesh."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:). ","kind":"symbol","title":"..<(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/.._(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"acos(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/acos(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The third component of the vector, frequently representing the value on the Z axis. ","kind":"symbol","title":"z","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/z","interfaceLanguage":"swift"}},"summary":"The third component of the vector, frequently representing the value on the Z axis."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"\/(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/\/(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"x","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/x","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a mesh by stroking a path with the line width, detail, and material you provide.  The path to stroke. The line width of the stroke. The number line segments are used to create a cubic or quadratic bezier curve. The optional material for the mesh.","kind":"symbol","title":"stroke(_:width:detail:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/stroke(_:width:detail:material:)-9mb5w","interfaceLanguage":"swift"}},"summary":"Creates a mesh by stroking a path with the line width, detail, and material you provide."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/*(_:_:)-305tn","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a path point at the provided position using the location coordinates you provide.  The X coordinate of the path point. The Y coordinate of the path point. The Z coordinate of the path point.","kind":"symbol","title":"point(_:_:_:texcoord:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/point(_:_:_:texcoord:color:)","interfaceLanguage":"swift"}},"summary":"Creates a path point at the provided position using the location coordinates you provide."},{"rawIndexableTextContent":"Returns a point that describes the intersection between plane and a line you provide. ","kind":"symbol","title":"intersection(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/intersection(with:)-79olr","interfaceLanguage":"swift"}},"summary":"Returns a point that describes the intersection between plane and a line you provide."},{"rawIndexableTextContent":"Stroke a path with the specified line width, depth and material ","kind":"symbol","title":"stroke(_:width:depth:faces:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/stroke(_:width:depth:faces:material:)","interfaceLanguage":"swift"}},"summary":"Stroke a path with the specified line width, depth and material"},{"rawIndexableTextContent":"Inherited from Comparable.<=(_:_:). ","kind":"symbol","title":"<=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/_=(_:_:)-375to","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.<=(_:_:)."},{"rawIndexableTextContent":"A struct that represents an angle in radians or degrees. ","kind":"symbol","title":"Angle","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle","interfaceLanguage":"swift"}},"summary":"A struct that represents an angle in radians or degrees."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"atan(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/atan(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the nearest point to the vector representing a point on the specified plane.  The plane to compare.","kind":"symbol","title":"project(onto:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/project(onto:)-817o2","interfaceLanguage":"swift"}},"summary":"Returns the nearest point to the vector representing a point on the specified plane."},{"rawIndexableTextContent":"Creates a vector of uniform size that you provide. ","kind":"symbol","title":"init(size:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/init(size:)-nkyk","interfaceLanguage":"swift"}},"summary":"Creates a vector of uniform size that you provide."},{"rawIndexableTextContent":"Returns a Boolean value that indicates if the point you provide is within this bounds.  The point to compare.","kind":"symbol","title":"containsPoint(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/containsPoint(_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates if the point you provide is within this bounds."},{"rawIndexableTextContent":"Creates a new plane by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new plane by decoding from the given decoder."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Comparable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/Comparable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the  trigonometric tangent value for the angle you provide.  The angle to use to calculate the tangent.","kind":"symbol","title":"tan(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/tan(_:)","interfaceLanguage":"swift"}},"summary":"Returns the  trigonometric tangent value for the angle you provide."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":" Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"lengthSquared","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/lengthSquared","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(_:texcoord:isCurved:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/init(_:texcoord:isCurved:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a conical mesh.  The radius of the cone. The height of the cone. The number of vertical slices that make up the cone. The number of segments used to make the pole. A Boolean value that indicates whether to add detail to the bottom pole of the cone. The direction the polygon faces. The mode in which the vertexes are mapped to edges. The optional material for the mesh.","kind":"symbol","title":"cone(radius:height:slices:poleDetail:addDetailAtBottomPole:faces:wrapMode:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/cone(radius:height:slices:poleDetail:addDetailAtBottomPole:faces:wrapMode:material:)","interfaceLanguage":"swift"}},"summary":"Creates a conical mesh."},{"rawIndexableTextContent":"The length of vector. ","kind":"symbol","title":"length","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/length","interfaceLanguage":"swift"}},"summary":"The length of vector."},{"rawIndexableTextContent":"Define a rotation around the X axis ","kind":"symbol","title":"pitch(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/pitch(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the X axis"},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/...(_:)-2uz97","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"Returns a new vector that represents the mininum of the components of the two vectors. ","kind":"symbol","title":"min(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/min(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a new vector that represents the mininum of the components of the two vectors."},{"rawIndexableTextContent":"Creates a mesh from an SCNNode with optional material mapping.  The node to convert into a mesh. A closure that converts a SceneKit material into a material.","kind":"symbol","title":"init(_:materialLookup:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(_:materialLookup:)-ilb2","interfaceLanguage":"swift"}},"summary":"Creates a mesh from an SCNNode with optional material mapping."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a cylindrical mesh.  The radius of the cylinder. The height of the cylinder. The number of vertical slices that make up the cylinder. The number of segments used to make the pole. The direction the polygon faces. The mode in which the vertexes are mapped to edges. The optional material for the mesh.","kind":"symbol","title":"cylinder(radius:height:slices:poleDetail:faces:wrapMode:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/cylinder(radius:height:slices:poleDetail:faces:wrapMode:material:)","interfaceLanguage":"swift"}},"summary":"Creates a cylindrical mesh."},{"rawIndexableTextContent":"A transform is a matrix representation of a rotation, position, and scale that can be applied to a 3D point or object.  Overview A transform is a convenient way to store and manipulate the location, orientation and size of a Mesh without directly modifying the vertex positions. Directly updating vertex positions can be problematic due to the buildup of rounding errors.","kind":"symbol","title":"Transform","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform","interfaceLanguage":"swift"}},"summary":"A transform is a matrix representation of a rotation, position, and scale that can be applied to a 3D point or object."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/scaled(by:)-7e3o7","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Linearly interpolate between this path point and another, at the unit interval you provide.  Return Value A new path at the linearly interpolated position. The path point to interpolate towards. The unit interval between this point and the path point provided.","kind":"symbol","title":"lerp(_:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/lerp(_:_:)","interfaceLanguage":"swift"}},"summary":"Linearly interpolate between this path point and another, at the unit interval you provide."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new line with the line segments you provide.  The line segments.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a new line with the line segments you provide."},{"rawIndexableTextContent":"Returns a point that represents the Intersection between the plane you provide and the line.  Return Value Returns nil if the plane doesn’t intersect the line. The plane to compare.","kind":"symbol","title":"intersection(with:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/intersection(with:)-7s1sd","interfaceLanguage":"swift"}},"summary":"Returns a point that represents the Intersection between the plane you provide and the line."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/scaled(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Define a rotation around the Y axis ","kind":"symbol","title":"yaw(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/yaw(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the Y axis"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaleCorrected(for:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/scaleCorrected(for:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"forward","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/forward","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.>(_:_:). ","kind":"symbol","title":">(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/_(_:_:)-filj","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/*(_:_:)-8l78z","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a color from NSColor.  The NSColor to convert.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(_:)-7d8un","interfaceLanguage":"swift"}},"summary":"Creates a color from NSColor."},{"rawIndexableTextContent":"Creates a curved path point at the provided position using the location coordinates you provide.  The X coordinate of the path point. The Y coordinate of the path point. The Z coordinate of the path point.","kind":"symbol","title":"curve(_:_:_:texcoord:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/curve(_:_:_:texcoord:color:)","interfaceLanguage":"swift"}},"summary":"Creates a curved path point at the provided position using the location coordinates you provide."},{"rawIndexableTextContent":"Returns a new bounds inset by specified amount.  Discussion Use a negative value to expand the bounds.","kind":"symbol","title":"inset(by:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/inset(by:)-4gk62","interfaceLanguage":"swift"}},"summary":"Returns a new bounds inset by specified amount."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/*=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Define a rotation from Euler angles applied in roll\/yaw\/pitch order roll is the angle around the Z axis, yaw is the angle around Y, and pitch is the angle around X ","kind":"symbol","title":"init(roll:yaw:pitch:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(roll:yaw:pitch:)","interfaceLanguage":"swift"}},"summary":"Define a rotation from Euler angles applied in roll\/yaw\/pitch order roll is the angle around the Z axis, yaw is the angle around Y, and pitch is the angle around X"},{"rawIndexableTextContent":"An array of the components of the vector. ","kind":"symbol","title":"components","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/components","interfaceLanguage":"swift"}},"summary":"An array of the components of the vector."},{"rawIndexableTextContent":"An empty bounds. ","kind":"symbol","title":"empty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/empty","interfaceLanguage":"swift"}},"summary":"An empty bounds."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/*=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable....(_:_:). ","kind":"symbol","title":"...(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/...(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:_:)."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/...(_:)-8feph","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"\/=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/\/=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"+=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/+=(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Computes the dot-product of this vector and another you provide.  Return Value A double that indicates the value to which one vector applies to another. The vector against which to compute a dot product.","kind":"symbol","title":"dot(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/dot(_:)","interfaceLanguage":"swift"}},"summary":"Computes the dot-product of this vector and another you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/WrapMode\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Encodes this line segment into the given encoder.  The encoder to write data to.","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Encodes this line segment into the given encoder."},{"rawIndexableTextContent":"Create a closed regular polygon ","kind":"symbol","title":"polygon(radius:sides:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/polygon(radius:sides:color:)","interfaceLanguage":"swift"}},"summary":"Create a closed regular polygon"},{"rawIndexableTextContent":"Creates a sphere mesh.  The radius of the sphere. The number of vertical slices that make up the sphere. The number of horizontal stacks that make up the sphere. <#poleDetail description#> The direction the polygon faces. The mode in which the vertexes are mapped to edges. The optional material for the mesh.","kind":"symbol","title":"sphere(radius:slices:stacks:poleDetail:faces:wrapMode:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/sphere(radius:slices:stacks:poleDetail:faces:wrapMode:material:)","interfaceLanguage":"swift"}},"summary":"Creates a sphere mesh."},{"rawIndexableTextContent":"Inherited from Comparable.>=(_:_:). ","kind":"symbol","title":">=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/_=(_:_:)-9s7pp","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"-(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/-(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scale","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/scale","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/PathPoint\/scaled(by:)-4wtbg","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.>(_:_:). ","kind":"symbol","title":">(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/_(_:_:)-9688a","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>(_:_:)."},{"rawIndexableTextContent":"Converts a concave polygon into 2 or more convex polygons using the “ear clipping” method. ","kind":"symbol","title":"tessellate()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/tessellate()","interfaceLanguage":"swift"}},"summary":"Converts a concave polygon into 2 or more convex polygons using the “ear clipping” method."},{"rawIndexableTextContent":"Define a rotation around the Z axis ","kind":"symbol","title":"roll(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/roll(_:)","interfaceLanguage":"swift"}},"summary":"Define a rotation around the Z axis"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:). ","kind":"symbol","title":"..<(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/.._(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:)."},{"rawIndexableTextContent":"Define 3D objects by constructing meshes. Overview To create a 3D object, create a Mesh in Euclid. You can manually create an array of Polygon instances, but that’s pretty tedious. Euclid offers a number of helper methods to quickly create complex geometry. Primitive Geometry The simplest way to create a Mesh is to start with an existing primitive, such as a cube or sphere. The following primitive types are available in Euclid, and are defined as static constructor methods on Mesh: cube(center:size:faces:material:) - A cubic Mesh (or cuboid, if you specify different values for the width, height and\/or depth). sphere(radius:slices:stacks:poleDetail:faces:wrapMode:material:) - A spherical Mesh. cylinder(radius:height:slices:poleDetail:faces:wrapMode:material:) - A cylindrical Mesh. cone(radius:height:slices:poleDetail:addDetailAtBottomPole:faces:wrapMode:material:) -  A conical Mesh. All Mesh instances are made of flat polygons. Since true curves cannot be represented using straight edges, the sphere, cylinder and cone primitives are approximations. Control the quality of these approximations by using the slices and\/or stacks parameters to configure the level of detail. In addition to the 3D Mesh primitives listed, there are also 2D Path primitives. These are implemented as static constructor methods on the Path type instead of Mesh: line(_:color:) - A straight line. ellipse(width:height:segments:color:)- A closed, elliptical Path. circle(radius:segments:color:)  - A closed, circular Path. rectangle(width:height:color:) - A closed, rectangular Path. square(size:color:) - Same as rectangle(width:height:color:), but with equal width and height. polygon(radius:sides:color:) - A regular polygon shape (not to be confused with Euclid’s Polygon type). Builders Geometric primitives are all very well, but there is a limit to what you can create by combining spheres, cubes, etc. As an intermediate step between the extremes of using predefined primitives or individually positioning polygons, you can use builders. Builders create a Mesh from a (typically) 2D Path. The following builders are defined as static constructor functions on the Mesh type: fill(_:faces:material:) - This builder fills a single Path to create a pair of Polygons (front and back faces). stroke(_:width:detail:material:) - This builder strokes a single Path to create a strip or tube. A second variant (stroke(_:width:detail:material:)) of the function accepts an array of LineSegment, which is convenient for creating a wireframe geometry from the uniqueEdges of a Mesh. lathe(_:slices:poleDetail:addDetailForFlatPoles:faces:wrapMode:material:) - This builder takes a 2D Path and rotates it around the Y-axis to create a rotationally symmetrical Mesh. This is an easy way to create complex shapes like candlesticks, chess pieces, rocket ships, etc. extrude(_:along:faces:material:) - This builder fills a Path and extrudes it along its axis, or another path. This can turn a circular path into a tube, or a square into a cube etc. loft(_:faces:material:) - This builder is similar to extrude(_:along:faces:material:), but takes multiple Path instances and joins them. The sequence of Path instances do not need to be the same shape, but must all have the same number of points and subpaths. To work correctly, each Path must be pre-positioned in 3D space so they do not all lie on the same plane. Curves Builders are a powerful tool for creating interesting Mesh instances from one or more Path instances, but what about creating an interesting Path in the first place? Creating a polygonal Path by specifying points individually is straightforward, but creating curves that way is tedious. That’s where Beziers come in. Beziers allow you to specify complex curves using just a few control points. Euclid exposes this feature via the curve(_:detail:) constructor method. The curve(_:detail:) method takes an array of PathPoint and a detail argument. Normally, the isCurved property is used to calculate surface normals (for lighting purposes), but with the curve(_:detail:) method it affects the shape of the Path. A sequence of regular (non-curved) PathPoint create sharp corners in the Path as normal, but curved ones are treated as off-curve Bezier control points. The detail argument of the curve(_:detail:) method controls how many straight line segments are used to approximate the curve. The curve(_:detail:) method uses second-order (quadratic) Bezier curves, where each curve has two on-curve end points and a single off-curve control point. If two curved PathPoint are used in sequence then an on-curve point is interpolated between them. It is therefore  possible to create curves entirely out of curved (off-curve) control points. This approach to curve generation is based on the popular TrueType (TTF) font system, and provides a good balance between simplicity and flexibility. For more complex curves, on macOS and iOS you can create Euclid Path from a Core Graphics CGPath by using the CGPath.paths() extension method. CGPath supports cubic bezier curves as well as quadratic, and has handy constructors for rounded rectangles and other shapes. Constructive Solid Geometry (CSG) CSG is another powerful tool for creating intricate geometry. CSG allows you to perform boolean operations (logical AND, OR, etc) on solid shapes. The following CSG operations are defined as methods on the Mesh type: subtract(_:isCancelled:) - Subtracts the volume of one Mesh from another. xor(_:isCancelled:) - Produces a shape representing the non-overlapping parts of the input Meshes (this is useful for rendering text glyphs). union(_:isCancelled:) - Combines two intersecting Meshes, removing internal faces and leaving only the outer shell around both shapes (logical OR). intersection(_:isCancelled:) - Returns a single Mesh representing the common volume of two intersecting Meshes (logical AND). stencil(_:isCancelled:) - This effectively “paints” part of one Mesh with the material from another. All CSG operations require Meshes that are “watertight”, that is they have no holes in their surface. Using a CSG operation on a mesh that isn’t sealed may result in unexpected results. Text On macOS and iOS you can make use of Euclid’s Core Text integration to create 2D or 3D extruded text. The text(_:width:detail:) method produces an array of 2D Path that represent the contours of each glyph in an AttributedString. You can use these paths with either fill(_:faces:material:) or extrude(_:along:faces:material:) builder methods to create solid text. Alternatively, the init(text:width:depth:detail:material:) constructor directly produces an extruded 3D text model from a String or AttributedString. Each glyph in the input string maps to a single Path in the result, but these Paths may contain nested subpaths. Glyphs formed from multiple subpaths will be filled using the even-odd rule (equivalent to an xor between the individually filled or extruded subpaths).","kind":"article","title":"Constructing Meshes","headings":["Overview","Primitive Geometry","Builders","Curves","Constructive Solid Geometry (CSG)","Text"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/ConstructingMeshes","interfaceLanguage":"swift"}},"summary":"Define 3D objects by constructing meshes."},{"rawIndexableTextContent":"Create a closed square path ","kind":"symbol","title":"square(size:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/square(size:color:)","interfaceLanguage":"swift"}},"summary":"Create a closed square path"},{"rawIndexableTextContent":"Returns a vectors with its component values explicitly rounded to the nearest quanta.  Discussion The precion of the quantized value is defined within Euclid to round off values to avoid cracks, breaks, and math errors while computing surface within constructive solid geometry operations.","kind":"symbol","title":"quantized()","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/quantized()","interfaceLanguage":"swift"}},"summary":"Returns a vectors with its component values explicitly rounded to the nearest quanta."},{"rawIndexableTextContent":"Create an extruded text model from a String  The text to convert into a model The font to use for the text glyphs. The optional width at which to render the model. The depth at which to render the model. The material to apply to the model. The number line segments are used to create a cubic or quadratic bezier curve.","kind":"symbol","title":"init(text:font:width:depth:detail:material:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/init(text:font:width:depth:detail:material:)","interfaceLanguage":"swift"}},"summary":"Create an extruded text model from a String"},{"rawIndexableTextContent":"Returns a vector with the values inverted. ","kind":"symbol","title":"-(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/-(_:)","interfaceLanguage":"swift"}},"summary":"Returns a vector with the values inverted."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"yaw","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/yaw","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new bounds that is the intersection of this bounds and another you provide.  The bounds with which to intersect.","kind":"symbol","title":"intersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/intersection(_:)","interfaceLanguage":"swift"}},"summary":"Returns a new bounds that is the intersection of this bounds and another you provide."},{"rawIndexableTextContent":"Inherited from Comparable...<(_:_:). ","kind":"symbol","title":"..<(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/.._(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable...<(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/translated(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new mesh reprenting the volume shared by both the mesh parameter and the receiver. If these do not intersect, an empty mesh will be returned.  Discussion ","kind":"symbol","title":"intersect(_:isCancelled:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/intersect(_:isCancelled:)","interfaceLanguage":"swift"}},"summary":"Returns a new mesh reprenting the volume shared by both the mesh parameter and the receiver. If these do not intersect, an empty mesh will be returned."},{"rawIndexableTextContent":"Returns the distance of the line from a given point in 3D.  Return Value The distance between the point and line. The point to compare.","kind":"symbol","title":"distance(from:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/distance(from:)-4o41","interfaceLanguage":"swift"}},"summary":"Returns the distance of the line from a given point in 3D."},{"rawIndexableTextContent":"Returns a Boolean value that indicates if the two vectors are approximately equal, within a precision of 1e-10. ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates if the two vectors are approximately equal, within a precision of 1e-10."},{"rawIndexableTextContent":"Creates a transform from the current state of a SceneKit node.  The node from which to determine the transform.","kind":"symbol","title":"transform(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/transform(from:)","interfaceLanguage":"swift"}},"summary":"Creates a transform from the current state of a SceneKit node."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A Boolean value that indicates whether the polygon is convex. ","kind":"symbol","title":"isConvex","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/isConvex","interfaceLanguage":"swift"}},"summary":"A Boolean value that indicates whether the polygon is convex."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(_:_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/init(_:_:_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Comparable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/Comparable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a Boolean value that indicates whether the two bounds intersect.  The bounds to compare.","kind":"symbol","title":"intersects(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/intersects(_:)-95v17","interfaceLanguage":"swift"}},"summary":"Returns a Boolean value that indicates whether the two bounds intersect."},{"rawIndexableTextContent":"Inherited from Comparable.>(_:_:). ","kind":"symbol","title":">(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/_(_:_:)-3fd8h","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>(_:_:)."},{"rawIndexableTextContent":"Splits concave polygons into 2 or more convex polygons. ","kind":"symbol","title":"tessellate()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/tessellate()","interfaceLanguage":"swift"}},"summary":"Splits concave polygons into 2 or more convex polygons."},{"rawIndexableTextContent":"The collection of path points that makes up this path. ","kind":"symbol","title":"points","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/points","interfaceLanguage":"swift"}},"summary":"The collection of path points that makes up this path."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"zero","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/zero","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The distance from the center of the plane to the world origin coordinates. ","kind":"symbol","title":"w","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/w","interfaceLanguage":"swift"}},"summary":"The distance from the center of the plane to the world origin coordinates."},{"rawIndexableTextContent":"The first component of the vector, frequently representing the value on the X axis. ","kind":"symbol","title":"x","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/x","interfaceLanguage":"swift"}},"summary":"The first component of the vector, frequently representing the value on the X axis."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(degrees:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/init(degrees:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The position of the vertex. ","kind":"symbol","title":"position","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/position","interfaceLanguage":"swift"}},"summary":"The position of the vertex."},{"rawIndexableTextContent":"Define a rotation from Euler angles applied in yaw\/pitch\/roll order yaw is the angle around the Y axis, pitch is the angle around X, and roll is the angle around Z ","kind":"symbol","title":"init(yaw:pitch:roll:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(yaw:pitch:roll:)","interfaceLanguage":"swift"}},"summary":"Define a rotation from Euler angles applied in yaw\/pitch\/roll order yaw is the angle around the Y axis, pitch is the angle around X, and roll is the angle around Z"},{"rawIndexableTextContent":"Creates a path from a polygon. ","kind":"symbol","title":"init(polygon:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/init(polygon:)","interfaceLanguage":"swift"}},"summary":"Creates a path from a polygon."},{"rawIndexableTextContent":"Texture coordinates for the vertex. ","kind":"symbol","title":"texcoord","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/texcoord","interfaceLanguage":"swift"}},"summary":"Texture coordinates for the vertex."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns the distance of the vector represented as a point from the plane you provide.  Return Value The distance between the point and the plane. The value is positive if the point lies in front of the plane, and negative if behind. The plane to compare.","kind":"symbol","title":"distance(from:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/distance(from:)-5p7ko","interfaceLanguage":"swift"}},"summary":"Returns the distance of the vector represented as a point from the plane you provide."},{"rawIndexableTextContent":"Creates a bounds from two SceneKit vectors.  A tuple of two SCNVector3 that represent opposite corners of the bounding box volume.","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a bounds from two SceneKit vectors."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"halfPi","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/halfPi","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a polygon from a path.  Discussion Path may be convex or concave, but must be closed, planar and non-degenerate.","kind":"symbol","title":"init(shape:material:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/init(shape:material:)","interfaceLanguage":"swift"}},"summary":"Creates a polygon from a path."},{"rawIndexableTextContent":"Split mesh along a plane.  Discussion If the plane doesn’t intersect the mesh, one of the returning meshes will be nil.","kind":"symbol","title":"split(along:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/split(along:)","interfaceLanguage":"swift"}},"summary":"Split mesh along a plane."},{"rawIndexableTextContent":"Inherited from Comparable....(_:). ","kind":"symbol","title":"...(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/...(_:)-732z3","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable....(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"length","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/length","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A plane at the origin, aligned with the X and Z coordinates. ","kind":"symbol","title":"xz","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/xz","interfaceLanguage":"swift"}},"summary":"A plane at the origin, aligned with the X and Z coordinates."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"red","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/red","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new line by decoding from the given decoder.  The decoder to read data from.","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/init(from:)","interfaceLanguage":"swift"}},"summary":"Creates a new line by decoding from the given decoder."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/rotated(by:)-2z48u","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a polygon from a set of vertices.  Discussion A polygon can be convex or concave, but vertices must be coplanar and non-degenerate. Vertices are assumed to be in anti-clockwise order for the purpose of deriving the plane.","kind":"symbol","title":"init(_:material:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/init(_:material:)-9mns5","interfaceLanguage":"swift"}},"summary":"Creates a polygon from a set of vertices."},{"rawIndexableTextContent":"The red component of the color. ","kind":"symbol","title":"r","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/r","interfaceLanguage":"swift"}},"summary":"The red component of the color."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"\/(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/\/(_:_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Clip mesh to a plane and optionally fill sheared faces with specified material ","kind":"symbol","title":"clip(to:fill:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/clip(to:fill:)","interfaceLanguage":"swift"}},"summary":"Clip mesh to a plane and optionally fill sheared faces with specified material"},{"rawIndexableTextContent":"Returns a set of edges where the mesh intersects the plane. ","kind":"symbol","title":"edges(intersecting:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/edges(intersecting:)","interfaceLanguage":"swift"}},"summary":"Returns a set of edges where the mesh intersects the plane."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"identity","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/identity","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a new mesh that includes all polygons from both this mesh and the mesh you provide.  Discussion Polygons are neither split nor removed.","kind":"symbol","title":"merge(_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/merge(_:)-swift.method","interfaceLanguage":"swift"}},"summary":"Returns a new mesh that includes all polygons from both this mesh and the mesh you provide."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"*(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/*(_:_:)-2ew65","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"scaled(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/scaled(by:)-69m6m","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"direction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/direction","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":" Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Angle\/-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Define a rotation from an axis vector and an angle ","kind":"symbol","title":"init(axis:angle:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Rotation\/init(axis:angle:)","interfaceLanguage":"swift"}},"summary":"Define a rotation from an axis vector and an angle"},{"rawIndexableTextContent":"Returns a set of polygon edges.  Discussion The direction of each edge is normalized relative to the origin to facilitate edge-equality comparisons.","kind":"symbol","title":"undirectedEdges","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/undirectedEdges","interfaceLanguage":"swift"}},"summary":"Returns a set of polygon edges."},{"rawIndexableTextContent":"The minimum location for the bounds. ","kind":"symbol","title":"min","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/min","interfaceLanguage":"swift"}},"summary":"The minimum location for the bounds."},{"rawIndexableTextContent":"Linearly interpolate between this vector and another you provide.  Return Value <#description#> The vector to interpolate towards. A value, typically between 0 and 1, to indicate the position  to interpolate between the two vectors.","kind":"symbol","title":"lerp(_:_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/lerp(_:_:)","interfaceLanguage":"swift"}},"summary":"Linearly interpolate between this vector and another you provide."},{"rawIndexableTextContent":"Material used by a given polygon ","kind":"symbol","title":"Polygon.Material","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/Material-swift.typealias","interfaceLanguage":"swift"}},"summary":"Material used by a given polygon"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Line\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Comparable.>=(_:_:). ","kind":"symbol","title":">=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment\/_=(_:_:)-5dvuy","interfaceLanguage":"swift"}},"summary":"Inherited from Comparable.>=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"transformed(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/transformed(by:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a color from an array of components. ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/init(_:)-53lhy","interfaceLanguage":"swift"}},"summary":"Creates a color from an array of components."},{"rawIndexableTextContent":"The edge vertices suitable for converting into a solid shape using lathe or extrusion.  Discussion The value is an empty array if path has subpaths.","kind":"symbol","title":"edgeVertices","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/edgeVertices","interfaceLanguage":"swift"}},"summary":"The edge vertices suitable for converting into a solid shape using lathe or extrusion."},{"rawIndexableTextContent":"Hashes the essential components of the vector by feeding them into the hasher you provide.  The hasher to use when combining the components of this instance.","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Hashes the essential components of the vector by feeding them into the hasher you provide."},{"rawIndexableTextContent":"Create a path from a line segment ","kind":"symbol","title":"line(_:color:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/line(_:color:)","interfaceLanguage":"swift"}},"summary":"Create a path from a line segment"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Merges this polygon with another you provide, removing redundant vertices if possible. ","kind":"symbol","title":"merge(_:ensureConvex:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/merge(_:ensureConvex:)","interfaceLanguage":"swift"}},"summary":"Merges this polygon with another you provide, removing redundant vertices if possible."},{"rawIndexableTextContent":"A struct that represents a finite-length line segment in 3D space.  Overview A line sgement is defined by a start point and an end point.","kind":"symbol","title":"LineSegment","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/LineSegment","interfaceLanguage":"swift"}},"summary":"A struct that represents a finite-length line segment in 3D space."},{"rawIndexableTextContent":"Render the front faces of the polygon.  Discussion The same effect as Mesh.Faces.front.","kind":"symbol","title":"Mesh.Faces.default","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/Faces\/default","interfaceLanguage":"swift"}},"summary":"Render the front faces of the polygon."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/rotated(by:)-8pqx8","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Polygon\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new vertex.  The position of the vertex. The normal for the vertex. The texture coordinates for the vertex.","kind":"symbol","title":"init(_:_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vertex\/init(_:_:_:_:)","interfaceLanguage":"swift"}},"summary":"Creates a new vertex."},{"rawIndexableTextContent":"Indicates whether the path is a closed path. ","kind":"symbol","title":"isClosed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/isClosed","interfaceLanguage":"swift"}},"summary":"Indicates whether the path is a closed path."},{"rawIndexableTextContent":"The polygons of the mesh, grouped by material. ","kind":"symbol","title":"polygonsByMaterial","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/polygonsByMaterial","interfaceLanguage":"swift"}},"summary":"The polygons of the mesh, grouped by material."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The face normal for path.  Discussion If shape is non-planar then this is the average\/approximate normal","kind":"symbol","title":"faceNormal","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Path\/faceNormal","interfaceLanguage":"swift"}},"summary":"The face normal for path."},{"rawIndexableTextContent":"The green component of the color. ","kind":"symbol","title":"g","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/g","interfaceLanguage":"swift"}},"summary":"The green component of the color."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"normalized()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Quaternion\/normalized()","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rotated(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Bounds\/rotated(by:)-5g62b","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a vector that is the difference of the vectors you provide.  The first vector. The second vector.","kind":"symbol","title":"-(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/-(_:_:)","interfaceLanguage":"swift"}},"summary":"Returns a vector that is the difference of the vectors you provide."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Transform\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Computes the cross-product of this vector and another you provide.  Return Value Returns a vector that is orthogonal to the two vectors used to compute the cross product. The vector against which to compute a cross product.","kind":"symbol","title":"cross(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Vector\/cross(_:)","interfaceLanguage":"swift"}},"summary":"Computes the cross-product of this vector and another you provide."},{"rawIndexableTextContent":"Returns the  trigonometric cosine value for the angle you provide.  The angle to use to calculate the cosine.","kind":"symbol","title":"cos(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/cos(_:)","interfaceLanguage":"swift"}},"summary":"Returns the  trigonometric cosine value for the angle you provide."},{"rawIndexableTextContent":"Callback used to cancel a long-running operation ","kind":"symbol","title":"Mesh.CancellationHandler","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Mesh\/CancellationHandler","interfaceLanguage":"swift"}},"summary":"Callback used to cancel a long-running operation"},{"rawIndexableTextContent":"Returns the distance of the point from a plane.  Discussion A positive value is returned if the point lies in front of the plane. A negative value is returned if the point lies behind the plane.","kind":"symbol","title":"distance(from:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Plane\/distance(from:)","interfaceLanguage":"swift"}},"summary":"Returns the distance of the point from a plane."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"gray","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/com.charcoaldesign.Euclid\/documentation\/Euclid\/Color\/gray","interfaceLanguage":"swift"}},"summary":"No overview available."}]